<?php

/**
 * BaseVille
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $CP
 * @property string $Ville
 * @property string $Region
 * @property string $Departement
 * @property string $Pays
 * @property Doctrine_Collection $Individus
 * @property Doctrine_Collection $Archives
 * 
 * @method string              getCP()          Returns the current record's "CP" value
 * @method string              getVille()       Returns the current record's "Ville" value
 * @method string              getRegion()      Returns the current record's "Region" value
 * @method string              getDepartement() Returns the current record's "Departement" value
 * @method string              getPays()        Returns the current record's "Pays" value
 * @method Doctrine_Collection getIndividus()   Returns the current record's "Individus" collection
 * @method Doctrine_Collection getArchives()    Returns the current record's "Archives" collection
 * @method Ville               setCP()          Sets the current record's "CP" value
 * @method Ville               setVille()       Sets the current record's "Ville" value
 * @method Ville               setRegion()      Sets the current record's "Region" value
 * @method Ville               setDepartement() Sets the current record's "Departement" value
 * @method Ville               setPays()        Sets the current record's "Pays" value
 * @method Ville               setIndividus()   Sets the current record's "Individus" collection
 * @method Ville               setArchives()    Sets the current record's "Archives" collection
 * 
 * @package    population
 * @subpackage model
 * @author     Flament Guillaume
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVille extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ville');
        $this->hasColumn('CP', 'string', 5, array(
             'type' => 'string',
             'notnull' => true,
             'charset' => 'utf8',
             'length' => 5,
             ));
        $this->hasColumn('Ville', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'charset' => 'utf8',
             'length' => 50,
             ));
        $this->hasColumn('Region', 'string', 40, array(
             'type' => 'string',
             'notnull' => true,
             'charset' => 'utf8',
             'length' => 40,
             ));
        $this->hasColumn('Departement', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'charset' => 'utf8',
             'length' => 60,
             ));
        $this->hasColumn('Pays', 'string', 40, array(
             'type' => 'string',
             'notnull' => false,
             'charset' => 'utf8',
             'length' => 40,
             ));

        $this->option('symfony', array(
             'form' => true,
             'filter' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Individu as Individus', array(
             'local' => 'id',
             'foreign' => 'idVilleNaissance'));

        $this->hasMany('Archive as Archives', array(
             'local' => 'id',
             'foreign' => 'idVilleNaissance'));
    }
}