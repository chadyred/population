<?php

/**
 * BaseIndividu
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nomNaissance
 * @property string $nomUsage
 * @property string $prenoms
 * @property string $titre
 * @property enum $sexe
 * @property date $dateNaissance
 * @property integer $idVilleNaissance
 * @property string $ancienneVilleNaiss
 * @property enum $situationFamiliale
 * @property boolean $chefFamille
 * @property string $profession
 * @property string $email
 * @property date $dateArrivee
 * @property integer $idFamille
 * @property Ville $villeNaissance
 * @property Famille $Famille
 * 
 * @method string   getNomNaissance()       Returns the current record's "nomNaissance" value
 * @method string   getNomUsage()           Returns the current record's "nomUsage" value
 * @method string   getPrenoms()            Returns the current record's "prenoms" value
 * @method string   getTitre()              Returns the current record's "titre" value
 * @method enum     getSexe()               Returns the current record's "sexe" value
 * @method date     getDateNaissance()      Returns the current record's "dateNaissance" value
 * @method integer  getIdVilleNaissance()   Returns the current record's "idVilleNaissance" value
 * @method string   getAncienneVilleNaiss() Returns the current record's "ancienneVilleNaiss" value
 * @method enum     getSituationFamiliale() Returns the current record's "situationFamiliale" value
 * @method boolean  getChefFamille()        Returns the current record's "chefFamille" value
 * @method string   getProfession()         Returns the current record's "profession" value
 * @method string   getEmail()              Returns the current record's "email" value
 * @method date     getDateArrivee()        Returns the current record's "dateArrivee" value
 * @method integer  getIdFamille()          Returns the current record's "idFamille" value
 * @method Ville    getVilleNaissance()     Returns the current record's "villeNaissance" value
 * @method Famille  getFamille()            Returns the current record's "Famille" value
 * @method Individu setNomNaissance()       Sets the current record's "nomNaissance" value
 * @method Individu setNomUsage()           Sets the current record's "nomUsage" value
 * @method Individu setPrenoms()            Sets the current record's "prenoms" value
 * @method Individu setTitre()              Sets the current record's "titre" value
 * @method Individu setSexe()               Sets the current record's "sexe" value
 * @method Individu setDateNaissance()      Sets the current record's "dateNaissance" value
 * @method Individu setIdVilleNaissance()   Sets the current record's "idVilleNaissance" value
 * @method Individu setAncienneVilleNaiss() Sets the current record's "ancienneVilleNaiss" value
 * @method Individu setSituationFamiliale() Sets the current record's "situationFamiliale" value
 * @method Individu setChefFamille()        Sets the current record's "chefFamille" value
 * @method Individu setProfession()         Sets the current record's "profession" value
 * @method Individu setEmail()              Sets the current record's "email" value
 * @method Individu setDateArrivee()        Sets the current record's "dateArrivee" value
 * @method Individu setIdFamille()          Sets the current record's "idFamille" value
 * @method Individu setVilleNaissance()     Sets the current record's "villeNaissance" value
 * @method Individu setFamille()            Sets the current record's "Famille" value
 * 
 * @package    population
 * @subpackage model
 * @author     Flament Guillaume
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIndividu extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('individu');
        $this->hasColumn('nomNaissance', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 60,
             ));
        $this->hasColumn('nomUsage', 'string', 60, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 60,
             ));
        $this->hasColumn('prenoms', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('titre', 'string', 4, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('sexe', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Masculin',
              1 => 'Féminin',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('dateNaissance', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('idVilleNaissance', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('ancienneVilleNaiss', 'string', 250, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 250,
             ));
        $this->hasColumn('situationFamiliale', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Célibataire',
              1 => 'Marié(e)',
              2 => 'Pacsé(e)',
              3 => 'Veuf(ve)',
              4 => 'Divorcé(e)',
              5 => 'Séparé(e)',
              6 => 'Vie maritale',
              7 => 'Inconnue',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('chefFamille', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('profession', 'string', 75, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 75,
             ));
        $this->hasColumn('email', 'string', 75, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 75,
             ));
        $this->hasColumn('dateArrivee', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('idFamille', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Ville as villeNaissance', array(
             'local' => 'idVilleNaissance',
             'foreign' => 'id'));

        $this->hasOne('Famille', array(
             'local' => 'idFamille',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}