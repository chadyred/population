<?php

/**
 * Troncon
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    population
 * @subpackage model
 * @author     Flament Guillaume
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Troncon extends BaseTroncon
{
    /**
     * Fonction qui va permettre de vérifie si le tronçons associé à la rue si le numéro est dans l'intervalle
     * désirée selon que le côté soit pair ou impair
     * 
     * @param <type> $numeroRue
     */
    public function getAdresseDisponible(Adresse $uneAdresse)
    {
        $disponible = false;

        $numeroRue = $uneAdresse->getNumeroRue();
        
        $minImp = $this->getNumDebutImpair();
        $maxImp = $this->getNumFinImpair();
        $minPair = $this->getNumDebutPair();
        $maxPair = $this->getNumFinPair();
        
        if($uneAdresse->pariteNumeroRue() == "pair")
        {
            if($numeroRue >= $minPair && $numeroRue <= $maxPair)
            {
                $disponible = true;
            }
        }
        else
        {
            if($uneAdresse->pariteNumeroRue() == "impair")
            {
                 if($numeroRue >= $minImp && $numeroRue <=  $maxImp)
                {
                    $disponible = true;
                }
            }
        }

        return $disponible;
    }

    /**
      * Fonction qui compte le nombre de résultat, en prenant la délimitation min et max des adresse des tronçons
      *
     * La fonction est static et est présente ici pour deux chose :
     * - on est pas obligé d'instancier un troncon pour la récupérer et elle est appeler lorsqu'un résultat est présent
     *
      * @param <type> $individusPager
      * @return int
      */
     public static function getNbIndividuPresentDansSecteur($results)
     {
         $compteur = 0;

          foreach ($results as $individu)
          {
                //S'il est présent dans le secteur on ajoute + 1 à notre compteur
                if($individu->getIndividuPresentDansSecteur() == true)
                {
                    $compteur++;
                }
          }

          return $compteur;
     }

}
